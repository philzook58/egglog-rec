(include "egglog/lib/bool.egg")
(include "egglog/lib/nat.egg")
(include "egglog/lib/bit.egg")
(include "egglog/lib/octet.egg")
(include "egglog/lib/octetsum.egg")
(include "egglog/lib/half.egg")
(include "egglog/lib/halfsum.egg")
(include "egglog/lib/block.egg")
(include "egglog/lib/blocksum.egg")
(include "egglog/lib/pair.egg")
(datatype Key)
(datatype Message)
(datatype SegmentedMessage)
(function buildKey (Block Block) Key)
(function unitMessage (Block) Message)
(function consMessage (Block Message) Message)
(function unitSegment (Message) SegmentedMessage)
(function consSegment (Message SegmentedMessage) SegmentedMessage)
(function n254 () Nat)
(function n256 () Nat)
(function n4100 () Nat)
(function x00000000 () Block)
(function x00000001 () Block)
(function x00000002 () Block)
(function x00000003 () Block)
(function x00000004 () Block)
(function x00000005 () Block)
(function x00000006 () Block)
(function x00000007 () Block)
(function x00000008 () Block)
(function x00000009 () Block)
(function x0000000A () Block)
(function x0000000B () Block)
(function x0000000C () Block)
(function x0000000D () Block)
(function x0000000E () Block)
(function x0000000F () Block)
(function x00000010 () Block)
(function x00000012 () Block)
(function x00000014 () Block)
(function x00000016 () Block)
(function x00000018 () Block)
(function x0000001B () Block)
(function x0000001D () Block)
(function x0000001E () Block)
(function x0000001F () Block)
(function x00000031 () Block)
(function x00000036 () Block)
(function x00000060 () Block)
(function x00000080 () Block)
(function x000000A5 () Block)
(function x000000B6 () Block)
(function x000000C4 () Block)
(function x000000D2 () Block)
(function x00000100 () Block)
(function x00000129 () Block)
(function x0000018C () Block)
(function x00004000 () Block)
(function x00010000 () Block)
(function x00020000 () Block)
(function x00030000 () Block)
(function x00040000 () Block)
(function x00060000 () Block)
(function x00804021 () Block)
(function x00FF00FF () Block)
(function x0103050B () Block)
(function x01030703 () Block)
(function x01030705 () Block)
(function x0103070F () Block)
(function x02040801 () Block)
(function x0297AF6F () Block)
(function x07050301 () Block)
(function x077788A2 () Block)
(function x07C72EAA () Block)
(function x0A202020 () Block)
(function x0AD67E20 () Block)
(function x10000000 () Block)
(function x11A9D254 () Block)
(function x11AC46B8 () Block)
(function x1277A6D4 () Block)
(function x13647149 () Block)
(function x160EE9B5 () Block)
(function x17065DBB () Block)
(function x17A808FD () Block)
(function x1D10D8D3 () Block)
(function x1D3B7760 () Block)
(function x1D9C9655 () Block)
(function x1F3F7FFF () Block)
(function x204E80A7 () Block)
(function x21D869BA () Block)
(function x24B66FB5 () Block)
(function x270EEDAF () Block)
(function x277B4B25 () Block)
(function x2829040B () Block)
(function x288FC786 () Block)
(function x28EAD8B3 () Block)
(function x29907CD8 () Block)
(function x29C1485F () Block)
(function x29EEE96B () Block)
(function x2A6091AE () Block)
(function x2BF8499A () Block)
(function x2E80AC30 () Block)
(function x2FD76FFB () Block)
(function x30261492 () Block)
(function x303FF4AA () Block)
(function x33D5A466 () Block)
(function x344925FC () Block)
(function x34ACF886 () Block)
(function x3CD54DEB () Block)
(function x3CF3A7D2 () Block)
(function x3DD81AC6 () Block)
(function x3F6F7248 () Block)
(function x48B204D6 () Block)
(function x4A645A01 () Block)
(function x4C49AAE0 () Block)
(function x4CE933E1 () Block)
(function x4D53901A () Block)
(function x4DA124A1 () Block)
(function x4F998E01 () Block)
(function x4FB1138A () Block)
(function x50DEC930 () Block)
(function x51AF3C1D () Block)
(function x51EDE9C7 () Block)
(function x550D91CE () Block)
(function x55555555 () Block)
(function x55DD063F () Block)
(function x5834A585 () Block)
(function x5A35D667 () Block)
(function x5BC02502 () Block)
(function x5CCA3239 () Block)
(function x5EBA06C2 () Block)
(function x5F38EEF1 () Block)
(function x613F8E2A () Block)
(function x63C70DBA () Block)
(function x6AD6E8A4 () Block)
(function x6AEBACF8 () Block)
(function x6D67E884 () Block)
(function x7050EC5E () Block)
(function x717153D5 () Block)
(function x7201F4DC () Block)
(function x7397C9AE () Block)
(function x74B39176 () Block)
(function x76232E5F () Block)
(function x7783C51D () Block)
(function x7792F9D4 () Block)
(function x7BC180AB () Block)
(function x7DB2D9F4 () Block)
(function x7DFEFBFF () Block)
(function x7F76A3B0 () Block)
(function x7F839576 () Block)
(function x7FFFFFF0 () Block)
(function x7FFFFFF1 () Block)
(function x7FFFFFFC () Block)
(function x7FFFFFFD () Block)
(function x80000000 () Block)
(function x80000002 () Block)
(function x800000C2 () Block)
(function x80018000 () Block)
(function x80018001 () Block)
(function x80397302 () Block)
(function x81D10CA3 () Block)
(function x89D635D7 () Block)
(function x8CE37709 () Block)
(function x8DC8BBDE () Block)
(function x9115A558 () Block)
(function x91896CFA () Block)
(function x9372CDC6 () Block)
(function x98D1CC75 () Block)
(function x9D15C437 () Block)
(function x9DB15CF6 () Block)
(function x9E2E7B36 () Block)
(function xA018C83B () Block)
(function xA0B87B77 () Block)
(function xA44AAAC0 () Block)
(function xA511987A () Block)
(function xA70FC148 () Block)
(function xA93BD410 () Block)
(function xAAAAAAAA () Block)
(function xAB00FFCD () Block)
(function xAB01FCCD () Block)
(function xAB6EED4A () Block)
(function xABEEED6B () Block)
(function xACBC13DD () Block)
(function xB1CC1CC5 () Block)
(function xB8142629 () Block)
(function xB99A62DE () Block)
(function xBA92DB12 () Block)
(function xBBA57835 () Block)
(function xBE9F0917 () Block)
(function xBF2D7D85 () Block)
(function xBFEF7FDF () Block)
(function xC1ED90DD () Block)
(function xC21A1846 () Block)
(function xC4EB1AEB () Block)
(function xC6B1317E () Block)
(function xCBC865BA () Block)
(function xCD959B46 () Block)
(function xD0482465 () Block)
(function xD636250D () Block)
(function xD7843FDC () Block)
(function xD78634BC () Block)
(function xD8804CA5 () Block)
(function xDB79FBDC () Block)
(function xDB9102B0 () Block)
(function xE0C08000 () Block)
(function xE6A12F07 () Block)
(function xEB35B97F () Block)
(function xF0239DD5 () Block)
(function xF14D6E28 () Block)
(function xF2EF3501 () Block)
(function xF6A09667 () Block)
(function xFD297DA4 () Block)
(function xFDC1A8BA () Block)
(function xFE4E5BDD () Block)
(function xFEA1D334 () Block)
(function xFECCAA6E () Block)
(function xFEFC07F0 () Block)
(function xFF2D7DA5 () Block)
(function xFFEF0001 () Block)
(function xFFFF00FF () Block)
(function xFFFFFF2D () Block)
(function xFFFFFF3A () Block)
(function xFFFFFFF0 () Block)
(function xFFFFFFF1 () Block)
(function xFFFFFFF4 () Block)
(function xFFFFFFF5 () Block)
(function xFFFFFFF7 () Block)
(function xFFFFFFF9 () Block)
(function xFFFFFFFA () Block)
(function xFFFFFFFB () Block)
(function xFFFFFFFC () Block)
(function xFFFFFFFD () Block)
(function xFFFFFFFE () Block)
(function xFFFFFFFF () Block)
(function appendMessage (Message Block) Message)
(function reverseMessage (Message) Message)
(function makeMessage (Nat Block Block) Message)
(function splitSegment (Message) SegmentedMessage)
(function cutSegment (Message Message Nat) SegmentedMessage)
(function ADD (Block Block) Block)
(function AND (Block Block) Block)
(function MUL (Block Block) Pair)
(function OR (Block Block) Block)
(function XOR (Block Block) Block)
(function XORtick (Pair) Block)
(function CYC (Block) Block)
(function nCYC (Nat Block) Block)
(function FIX1 (Block) Block)
(function FIX2 (Block) Block)
(function needAdjust (Octet) Bool)
(function adjustCode (Octet) Bit)
(function adjust (Octet Octet) Octet)
(function PAT (Block Block) Octet)
(function BYT (Block Block) Pair)
(function BYTtick (Octet Octet Octet Octet Octet Octet Octet Octet Octet) Pair)
(function ADDC (Block Block) Pair)
(function ADDCtick (BlockSum) Pair)
(function MUL1 (Block Block) Block)
(function MUL1XY (Pair) Block)
(function MUL1UL (Block Block) Block)
(function MUL1SC (Pair) Block)
(function MUL2 (Block Block) Block)
(function MUL2XY (Pair) Block)
(function MUL2UL (Block Block) Block)
(function MUL2DEL (Pair Block) Block)
(function MUL2FL (Block Block) Block)
(function MUL2SC (Pair) Block)
(function MUL2A (Block Block) Block)
(function MUL2AXY (Pair) Block)
(function MUL2AUL (Block Block) Block)
(function MUL2ADL (Block Block) Block)
(function MUL2ASC (Pair) Block)
(function squareHalf (Half) Block)
(function Q (Octet) Block)
(function H4 (Block) Block)
(function H6 (Block) Block)
(function H8 (Block) Block)
(function H0 (Block) Block)
(function H5 (Block Octet) Block)
(function H7 (Block) Block)
(function H9 (Block) Block)
(function J1_2 (Block) Block)
(function J1_4 (Block) Block)
(function J1_6 (Block) Block)
(function J1_8 (Block) Block)
(function J2_2 (Block) Block)
(function J2_4 (Block) Block)
(function J2_6 (Block) Block)
(function J2_8 (Block) Block)
(function K1_2 (Block) Block)
(function K1_4 (Block) Block)
(function K1_5 (Block) Block)
(function K1_7 (Block) Block)
(function K1_9 (Block) Block)
(function K2_2 (Block) Block)
(function K2_4 (Block) Block)
(function K2_5 (Block) Block)
(function K2_7 (Block) Block)
(function K2_9 (Block) Block)
(function preludeXY (Block Block) Pair)
(function preludeVW (Block Block) Pair)
(function preludeST (Block Block) Pair)
(function preludeXYtick (Pair Octet) Pair)
(function preludeVWtick (Pair) Pair)
(function preludeSTtick (Pair) Pair)
(function computeXY (Pair Pair Block) Pair)
(function computeXYtick (Pair Block Block) Pair)
(function computeVW (Pair) Pair)
(function loop1 (Pair Pair Message) Pair)
(function loop2 (Pair Pair Message) Pair)
(function coda (Pair Pair Pair) Block)
(function MAA (Key Message) Block)
(function MAAtick (Pair Pair Pair Message) Block)
(function MAC (Key Message) Block)
(function MACfirst (Key SegmentedMessage) Block)
(function MACnext (Key Block SegmentedMessage) Block)
(rewrite n254 (addNat n12 (mulNat n11 n22)) )
(rewrite n256 (mulNat n16 n16) )
(rewrite n4100 (addNat n4 (mulNat n16 n256)) )
(rewrite x00000000 (buildBlock x00 x00 x00 x00) )
(rewrite x00000001 (buildBlock x00 x00 x00 x01) )
(rewrite x00000002 (buildBlock x00 x00 x00 x02) )
(rewrite x00000003 (buildBlock x00 x00 x00 x03) )
(rewrite x00000004 (buildBlock x00 x00 x00 x04) )
(rewrite x00000005 (buildBlock x00 x00 x00 x05) )
(rewrite x00000006 (buildBlock x00 x00 x00 x06) )
(rewrite x00000007 (buildBlock x00 x00 x00 x07) )
(rewrite x00000008 (buildBlock x00 x00 x00 x08) )
(rewrite x00000009 (buildBlock x00 x00 x00 x09) )
(rewrite x0000000A (buildBlock x00 x00 x00 x0A) )
(rewrite x0000000B (buildBlock x00 x00 x00 x0B) )
(rewrite x0000000C (buildBlock x00 x00 x00 x0C) )
(rewrite x0000000D (buildBlock x00 x00 x00 x0D) )
(rewrite x0000000E (buildBlock x00 x00 x00 x0E) )
(rewrite x0000000F (buildBlock x00 x00 x00 x0F) )
(rewrite x00000010 (buildBlock x00 x00 x00 x10) )
(rewrite x00000012 (buildBlock x00 x00 x00 x12) )
(rewrite x00000014 (buildBlock x00 x00 x00 x14) )
(rewrite x00000016 (buildBlock x00 x00 x00 x16) )
(rewrite x00000018 (buildBlock x00 x00 x00 x18) )
(rewrite x0000001B (buildBlock x00 x00 x00 x1B) )
(rewrite x0000001D (buildBlock x00 x00 x00 x1D) )
(rewrite x0000001E (buildBlock x00 x00 x00 x1E) )
(rewrite x0000001F (buildBlock x00 x00 x00 x1F) )
(rewrite x00000031 (buildBlock x00 x00 x00 x31) )
(rewrite x00000036 (buildBlock x00 x00 x00 x36) )
(rewrite x00000060 (buildBlock x00 x00 x00 x60) )
(rewrite x00000080 (buildBlock x00 x00 x00 x80) )
(rewrite x000000A5 (buildBlock x00 x00 x00 xA5) )
(rewrite x000000B6 (buildBlock x00 x00 x00 xB6) )
(rewrite x000000C4 (buildBlock x00 x00 x00 xC4) )
(rewrite x000000D2 (buildBlock x00 x00 x00 xD2) )
(rewrite x00000100 (buildBlock x00 x00 x01 x00) )
(rewrite x00000129 (buildBlock x00 x00 x01 x29) )
(rewrite x0000018C (buildBlock x00 x00 x01 x8C) )
(rewrite x00004000 (buildBlock x00 x00 x40 x00) )
(rewrite x00010000 (buildBlock x00 x01 x00 x00) )
(rewrite x00020000 (buildBlock x00 x02 x00 x00) )
(rewrite x00030000 (buildBlock x00 x03 x00 x00) )
(rewrite x00040000 (buildBlock x00 x04 x00 x00) )
(rewrite x00060000 (buildBlock x00 x06 x00 x00) )
(rewrite x00804021 (buildBlock x00 x80 x40 x21) )
(rewrite x00FF00FF (buildBlock x00 xFF x00 xFF) )
(rewrite x0103050B (buildBlock x01 x03 x05 x0B) )
(rewrite x01030703 (buildBlock x01 x03 x07 x03) )
(rewrite x01030705 (buildBlock x01 x03 x07 x05) )
(rewrite x0103070F (buildBlock x01 x03 x07 x0F) )
(rewrite x02040801 (buildBlock x02 x04 x08 x01) )
(rewrite x0297AF6F (buildBlock x02 x97 xAF x6F) )
(rewrite x07050301 (buildBlock x07 x05 x03 x01) )
(rewrite x077788A2 (buildBlock x07 x77 x88 xA2) )
(rewrite x07C72EAA (buildBlock x07 xC7 x2E xAA) )
(rewrite x0A202020 (buildBlock x0A x20 x20 x20) )
(rewrite x0AD67E20 (buildBlock x0A xD6 x7E x20) )
(rewrite x10000000 (buildBlock x10 x00 x00 x00) )
(rewrite x11A9D254 (buildBlock x11 xA9 xD2 x54) )
(rewrite x11AC46B8 (buildBlock x11 xAC x46 xB8) )
(rewrite x1277A6D4 (buildBlock x12 x77 xA6 xD4) )
(rewrite x13647149 (buildBlock x13 x64 x71 x49) )
(rewrite x160EE9B5 (buildBlock x16 x0E xE9 xB5) )
(rewrite x17065DBB (buildBlock x17 x06 x5D xBB) )
(rewrite x17A808FD (buildBlock x17 xA8 x08 xFD) )
(rewrite x1D10D8D3 (buildBlock x1D x10 xD8 xD3) )
(rewrite x1D3B7760 (buildBlock x1D x3B x77 x60) )
(rewrite x1D9C9655 (buildBlock x1D x9C x96 x55) )
(rewrite x1F3F7FFF (buildBlock x1F x3F x7F xFF) )
(rewrite x204E80A7 (buildBlock x20 x4E x80 xA7) )
(rewrite x21D869BA (buildBlock x21 xD8 x69 xBA) )
(rewrite x24B66FB5 (buildBlock x24 xB6 x6F xB5) )
(rewrite x270EEDAF (buildBlock x27 x0E xED xAF) )
(rewrite x277B4B25 (buildBlock x27 x7B x4B x25) )
(rewrite x2829040B (buildBlock x28 x29 x04 x0B) )
(rewrite x288FC786 (buildBlock x28 x8F xC7 x86) )
(rewrite x28EAD8B3 (buildBlock x28 xEA xD8 xB3) )
(rewrite x29907CD8 (buildBlock x29 x90 x7C xD8) )
(rewrite x29C1485F (buildBlock x29 xC1 x48 x5F) )
(rewrite x29EEE96B (buildBlock x29 xEE xE9 x6B) )
(rewrite x2A6091AE (buildBlock x2A x60 x91 xAE) )
(rewrite x2BF8499A (buildBlock x2B xF8 x49 x9A) )
(rewrite x2E80AC30 (buildBlock x2E x80 xAC x30) )
(rewrite x2FD76FFB (buildBlock x2F xD7 x6F xFB) )
(rewrite x30261492 (buildBlock x30 x26 x14 x92) )
(rewrite x303FF4AA (buildBlock x30 x3F xF4 xAA) )
(rewrite x33D5A466 (buildBlock x33 xD5 xA4 x66) )
(rewrite x344925FC (buildBlock x34 x49 x25 xFC) )
(rewrite x34ACF886 (buildBlock x34 xAC xF8 x86) )
(rewrite x3CD54DEB (buildBlock x3C xD5 x4D xEB) )
(rewrite x3CF3A7D2 (buildBlock x3C xF3 xA7 xD2) )
(rewrite x3DD81AC6 (buildBlock x3D xD8 x1A xC6) )
(rewrite x3F6F7248 (buildBlock x3F x6F x72 x48) )
(rewrite x48B204D6 (buildBlock x48 xB2 x04 xD6) )
(rewrite x4A645A01 (buildBlock x4A x64 x5A x01) )
(rewrite x4C49AAE0 (buildBlock x4C x49 xAA xE0) )
(rewrite x4CE933E1 (buildBlock x4C xE9 x33 xE1) )
(rewrite x4D53901A (buildBlock x4D x53 x90 x1A) )
(rewrite x4DA124A1 (buildBlock x4D xA1 x24 xA1) )
(rewrite x4F998E01 (buildBlock x4F x99 x8E x01) )
(rewrite x4FB1138A (buildBlock x4F xB1 x13 x8A) )
(rewrite x50DEC930 (buildBlock x50 xDE xC9 x30) )
(rewrite x51AF3C1D (buildBlock x51 xAF x3C x1D) )
(rewrite x51EDE9C7 (buildBlock x51 xED xE9 xC7) )
(rewrite x550D91CE (buildBlock x55 x0D x91 xCE) )
(rewrite x55555555 (buildBlock x55 x55 x55 x55) )
(rewrite x55DD063F (buildBlock x55 xDD x06 x3F) )
(rewrite x5834A585 (buildBlock x58 x34 xA5 x85) )
(rewrite x5A35D667 (buildBlock x5A x35 xD6 x67) )
(rewrite x5BC02502 (buildBlock x5B xC0 x25 x02) )
(rewrite x5CCA3239 (buildBlock x5C xCA x32 x39) )
(rewrite x5EBA06C2 (buildBlock x5E xBA x06 xC2) )
(rewrite x5F38EEF1 (buildBlock x5F x38 xEE xF1) )
(rewrite x613F8E2A (buildBlock x61 x3F x8E x2A) )
(rewrite x63C70DBA (buildBlock x63 xC7 x0D xBA) )
(rewrite x6AD6E8A4 (buildBlock x6A xD6 xE8 xA4) )
(rewrite x6AEBACF8 (buildBlock x6A xEB xAC xF8) )
(rewrite x6D67E884 (buildBlock x6D x67 xE8 x84) )
(rewrite x7050EC5E (buildBlock x70 x50 xEC x5E) )
(rewrite x717153D5 (buildBlock x71 x71 x53 xD5) )
(rewrite x7201F4DC (buildBlock x72 x01 xF4 xDC) )
(rewrite x7397C9AE (buildBlock x73 x97 xC9 xAE) )
(rewrite x74B39176 (buildBlock x74 xB3 x91 x76) )
(rewrite x76232E5F (buildBlock x76 x23 x2E x5F) )
(rewrite x7783C51D (buildBlock x77 x83 xC5 x1D) )
(rewrite x7792F9D4 (buildBlock x77 x92 xF9 xD4) )
(rewrite x7BC180AB (buildBlock x7B xC1 x80 xAB) )
(rewrite x7DB2D9F4 (buildBlock x7D xB2 xD9 xF4) )
(rewrite x7DFEFBFF (buildBlock x7D xFE xFB xFF) )
(rewrite x7F76A3B0 (buildBlock x7F x76 xA3 xB0) )
(rewrite x7F839576 (buildBlock x7F x83 x95 x76) )
(rewrite x7FFFFFF0 (buildBlock x7F xFF xFF xF0) )
(rewrite x7FFFFFF1 (buildBlock x7F xFF xFF xF1) )
(rewrite x7FFFFFFC (buildBlock x7F xFF xFF xFC) )
(rewrite x7FFFFFFD (buildBlock x7F xFF xFF xFD) )
(rewrite x80000000 (buildBlock x80 x00 x00 x00) )
(rewrite x80000002 (buildBlock x80 x00 x00 x02) )
(rewrite x800000C2 (buildBlock x80 x00 x00 xC2) )
(rewrite x80018000 (buildBlock x80 x01 x80 x00) )
(rewrite x80018001 (buildBlock x80 x01 x80 x01) )
(rewrite x80397302 (buildBlock x80 x39 x73 x02) )
(rewrite x81D10CA3 (buildBlock x81 xD1 x0C xA3) )
(rewrite x89D635D7 (buildBlock x89 xD6 x35 xD7) )
(rewrite x8CE37709 (buildBlock x8C xE3 x77 x09) )
(rewrite x8DC8BBDE (buildBlock x8D xC8 xBB xDE) )
(rewrite x9115A558 (buildBlock x91 x15 xA5 x58) )
(rewrite x91896CFA (buildBlock x91 x89 x6C xFA) )
(rewrite x9372CDC6 (buildBlock x93 x72 xCD xC6) )
(rewrite x98D1CC75 (buildBlock x98 xD1 xCC x75) )
(rewrite x9D15C437 (buildBlock x9D x15 xC4 x37) )
(rewrite x9DB15CF6 (buildBlock x9D xB1 x5C xF6) )
(rewrite x9E2E7B36 (buildBlock x9E x2E x7B x36) )
(rewrite xA018C83B (buildBlock xA0 x18 xC8 x3B) )
(rewrite xA0B87B77 (buildBlock xA0 xB8 x7B x77) )
(rewrite xA44AAAC0 (buildBlock xA4 x4A xAA xC0) )
(rewrite xA511987A (buildBlock xA5 x11 x98 x7A) )
(rewrite xA70FC148 (buildBlock xA7 x0F xC1 x48) )
(rewrite xA93BD410 (buildBlock xA9 x3B xD4 x10) )
(rewrite xAAAAAAAA (buildBlock xAA xAA xAA xAA) )
(rewrite xAB00FFCD (buildBlock xAB x00 xFF xCD) )
(rewrite xAB01FCCD (buildBlock xAB x01 xFC xCD) )
(rewrite xAB6EED4A (buildBlock xAB x6E xED x4A) )
(rewrite xABEEED6B (buildBlock xAB xEE xED x6B) )
(rewrite xACBC13DD (buildBlock xAC xBC x13 xDD) )
(rewrite xB1CC1CC5 (buildBlock xB1 xCC x1C xC5) )
(rewrite xB8142629 (buildBlock xB8 x14 x26 x29) )
(rewrite xB99A62DE (buildBlock xB9 x9A x62 xDE) )
(rewrite xBA92DB12 (buildBlock xBA x92 xDB x12) )
(rewrite xBBA57835 (buildBlock xBB xA5 x78 x35) )
(rewrite xBE9F0917 (buildBlock xBE x9F x09 x17) )
(rewrite xBF2D7D85 (buildBlock xBF x2D x7D x85) )
(rewrite xBFEF7FDF (buildBlock xBF xEF x7F xDF) )
(rewrite xC1ED90DD (buildBlock xC1 xED x90 xDD) )
(rewrite xC21A1846 (buildBlock xC2 x1A x18 x46) )
(rewrite xC4EB1AEB (buildBlock xC4 xEB x1A xEB) )
(rewrite xC6B1317E (buildBlock xC6 xB1 x31 x7E) )
(rewrite xCBC865BA (buildBlock xCB xC8 x65 xBA) )
(rewrite xCD959B46 (buildBlock xCD x95 x9B x46) )
(rewrite xD0482465 (buildBlock xD0 x48 x24 x65) )
(rewrite xD636250D (buildBlock xD6 x36 x25 x0D) )
(rewrite xD7843FDC (buildBlock xD7 x84 x3F xDC) )
(rewrite xD78634BC (buildBlock xD7 x86 x34 xBC) )
(rewrite xD8804CA5 (buildBlock xD8 x80 x4C xA5) )
(rewrite xDB79FBDC (buildBlock xDB x79 xFB xDC) )
(rewrite xDB9102B0 (buildBlock xDB x91 x02 xB0) )
(rewrite xE0C08000 (buildBlock xE0 xC0 x80 x00) )
(rewrite xE6A12F07 (buildBlock xE6 xA1 x2F x07) )
(rewrite xEB35B97F (buildBlock xEB x35 xB9 x7F) )
(rewrite xF0239DD5 (buildBlock xF0 x23 x9D xD5) )
(rewrite xF14D6E28 (buildBlock xF1 x4D x6E x28) )
(rewrite xF2EF3501 (buildBlock xF2 xEF x35 x01) )
(rewrite xF6A09667 (buildBlock xF6 xA0 x96 x67) )
(rewrite xFD297DA4 (buildBlock xFD x29 x7D xA4) )
(rewrite xFDC1A8BA (buildBlock xFD xC1 xA8 xBA) )
(rewrite xFE4E5BDD (buildBlock xFE x4E x5B xDD) )
(rewrite xFEA1D334 (buildBlock xFE xA1 xD3 x34) )
(rewrite xFECCAA6E (buildBlock xFE xCC xAA x6E) )
(rewrite xFEFC07F0 (buildBlock xFE xFC x07 xF0) )
(rewrite xFF2D7DA5 (buildBlock xFF x2D x7D xA5) )
(rewrite xFFEF0001 (buildBlock xFF xEF x00 x01) )
(rewrite xFFFF00FF (buildBlock xFF xFF x00 xFF) )
(rewrite xFFFFFF2D (buildBlock xFF xFF xFF x2D) )
(rewrite xFFFFFF3A (buildBlock xFF xFF xFF x3A) )
(rewrite xFFFFFFF0 (buildBlock xFF xFF xFF xF0) )
(rewrite xFFFFFFF1 (buildBlock xFF xFF xFF xF1) )
(rewrite xFFFFFFF4 (buildBlock xFF xFF xFF xF4) )
(rewrite xFFFFFFF5 (buildBlock xFF xFF xFF xF5) )
(rewrite xFFFFFFF7 (buildBlock xFF xFF xFF xF7) )
(rewrite xFFFFFFF9 (buildBlock xFF xFF xFF xF9) )
(rewrite xFFFFFFFA (buildBlock xFF xFF xFF xFA) )
(rewrite xFFFFFFFB (buildBlock xFF xFF xFF xFB) )
(rewrite xFFFFFFFC (buildBlock xFF xFF xFF xFC) )
(rewrite xFFFFFFFD (buildBlock xFF xFF xFF xFD) )
(rewrite xFFFFFFFE (buildBlock xFF xFF xFF xFE) )
(rewrite xFFFFFFFF (buildBlock xFF xFF xFF xFF) )
(rewrite (appendMessage (unitMessage W) Wtick) (consMessage W (unitMessage Wtick)) )
(rewrite (appendMessage (consMessage W M) Wtick) (consMessage W (appendMessage M Wtick)) )
(rewrite (reverseMessage (unitMessage W)) (unitMessage W) )
(rewrite (reverseMessage (consMessage W M)) (appendMessage (reverseMessage M) W) )
(rewrite (makeMessage (succNat N) W Wtick) (unitMessage W) :when ((= (eqNat N n0) mytrue)))
(rewrite (makeMessage (succNat N) W Wtick) (consMessage W (makeMessage N (ADD W Wtick) Wtick)) :when ((= (eqNat N n0) myfalse)))
(rewrite (ADD W Wtick) (addBlock W Wtick) )
(rewrite (AND W Wtick) (ANDBlock W Wtick) )
(rewrite (MUL W Wtick) (mulBlock W Wtick) )
(rewrite (OR W Wtick) (ORBlock W Wtick) )
(rewrite (XOR W Wtick) (xORBlock W Wtick) )
(rewrite (XORtick (buildPair W Wtick)) (XOR W Wtick) )
(rewrite (CYC (buildBlock (buildOctet B1 B2 B3 B4 B5 B6 B7 B8) (buildOctet B9 B10 B11 B12 B13 B14 B15 B16) (buildOctet B17 B18 B19 B20 B21 B22 B23 B24) (buildOctet B25 B26 B27 B28 B29 B30 B31 B32))) (buildBlock (buildOctet B2 B3 B4 B5 B6 B7 B8 B9) (buildOctet B10 B11 B12 B13 B14 B15 B16 B17) (buildOctet B18 B19 B20 B21 B22 B23 B24 B25) (buildOctet B26 B27 B28 B29 B30 B31 B32 B1)) )
(rewrite (nCYC n0 W) W )
(rewrite (nCYC (succNat N) W) (CYC (nCYC N W)) )
(rewrite (FIX1 W) (AND (OR W x02040801) xBFEF7FDF) )
(rewrite (FIX2 W) (AND (OR W x00804021) x7DFEFBFF) )
(rewrite (needAdjust O) (ORBool (eqOctet O x00) (eqOctet O xFF)) )
(rewrite (adjustCode O) x1 :when ((= (needAdjust O) mytrue)))
(rewrite (adjustCode O) x0 :when ((= (needAdjust O) myfalse)))
(rewrite (adjust O Otick) (xOROctet O Otick) :when ((= (needAdjust O) mytrue)))
(rewrite (adjust O Otick) O :when ((= (needAdjust O) myfalse)))
(rewrite (PAT (buildBlock O1 O2 O3 O4) (buildBlock Otick1 Otick2 Otick3 Otick4)) (buildOctet (adjustCode O1) (adjustCode O2) (adjustCode O3) (adjustCode O4) (adjustCode Otick1) (adjustCode Otick2) (adjustCode Otick3) (adjustCode Otick4)) )
(rewrite (BYT (buildBlock O1 O2 O3 O4) (buildBlock Otick1 Otick2 Otick3 Otick4)) (BYTtick O1 O2 O3 O4 Otick1 Otick2 Otick3 Otick4 (PAT (buildBlock O1 O2 O3 O4) (buildBlock Otick1 Otick2 Otick3 Otick4))) )
(rewrite (BYTtick O1 O2 O3 O4 Otick1 Otick2 Otick3 Otick4 Opat) (buildPair (buildBlock (adjust O1 (rightOctet7 Opat)) (adjust O2 (rightOctet6 Opat)) (adjust O3 (rightOctet5 Opat)) (adjust O4 (rightOctet4 Opat))) (buildBlock (adjust Otick1 (rightOctet3 Opat)) (adjust Otick2 (rightOctet2 Opat)) (adjust Otick3 (rightOctet1 Opat)) (adjust Otick4 Opat))) )
(rewrite (ADDC W Wtick) (ADDCtick (addBlockSum W Wtick)) )
(rewrite (ADDCtick (buildBlockSum x0 W)) (buildPair x00000000 W) )
(rewrite (ADDCtick (buildBlockSum x1 W)) (buildPair x00000001 W) )
(rewrite (MUL1 W Wtick) (MUL1XY (MUL W Wtick)) )
(rewrite (MUL1XY (buildPair W Wtick)) (MUL1UL W Wtick) )
(rewrite (MUL1UL W Wtick) (MUL1SC (ADDC W Wtick)) )
(rewrite (MUL1SC (buildPair Wcarry W)) (ADD W Wcarry) )
(rewrite (MUL2 W Wtick) (MUL2XY (MUL W Wtick)) )
(rewrite (MUL2XY (buildPair W Wtick)) (MUL2UL W Wtick) )
(rewrite (MUL2UL W Wtick) (MUL2DEL (ADDC W W) Wtick) )
(rewrite (MUL2DEL (buildPair Wcarry W) Wtick) (MUL2FL (ADD W (ADD Wcarry Wcarry)) Wtick) )
(rewrite (MUL2FL W Wtick) (MUL2SC (ADDC W Wtick)) )
(rewrite (MUL2SC (buildPair Wcarry W)) (ADD W (ADD Wcarry Wcarry)) )
(rewrite (MUL2A W Wtick) (MUL2AXY (MUL W Wtick)) )
(rewrite (MUL2AXY (buildPair W Wtick)) (MUL2AUL W Wtick) )
(rewrite (MUL2AUL W Wtick) (MUL2ADL (ADD W W) Wtick) )
(rewrite (MUL2ADL W Wtick) (MUL2ASC (ADDC W Wtick)) )
(rewrite (MUL2ASC (buildPair Wcarry W)) (ADD W (ADD Wcarry Wcarry)) )
(rewrite (squareHalf H) (mulHalf H H) )
(rewrite (Q O) (squareHalf (addHalf (buildHalf x00 O) x0001)) )
(rewrite (J1_2 W) (MUL1 W W) )
(rewrite (J1_4 W) (MUL1 (J1_2 W) (J1_2 W)) )
(rewrite (J1_6 W) (MUL1 (J1_2 W) (J1_4 W)) )
(rewrite (J1_8 W) (MUL1 (J1_2 W) (J1_6 W)) )
(rewrite (J2_2 W) (MUL2 W W) )
(rewrite (J2_4 W) (MUL2 (J2_2 W) (J2_2 W)) )
(rewrite (J2_6 W) (MUL2 (J2_2 W) (J2_4 W)) )
(rewrite (J2_8 W) (MUL2 (J2_2 W) (J2_6 W)) )
(rewrite (K1_2 W) (MUL1 W W) )
(rewrite (K1_4 W) (MUL1 (K1_2 W) (K1_2 W)) )
(rewrite (K1_5 W) (MUL1 W (K1_4 W)) )
(rewrite (K1_7 W) (MUL1 (K1_2 W) (K1_5 W)) )
(rewrite (K1_9 W) (MUL1 (K1_2 W) (K1_7 W)) )
(rewrite (K2_2 W) (MUL2 W W) )
(rewrite (K2_4 W) (MUL2 (K2_2 W) (K2_2 W)) )
(rewrite (K2_5 W) (MUL2 W (K2_4 W)) )
(rewrite (K2_7 W) (MUL2 (K2_2 W) (K2_5 W)) )
(rewrite (K2_9 W) (MUL2 (K2_2 W) (K2_7 W)) )
(rewrite (H4 W) (XOR (J1_4 W) (J2_4 W)) )
(rewrite (H6 W) (XOR (J1_6 W) (J2_6 W)) )
(rewrite (H8 W) (XOR (J1_8 W) (J2_8 W)) )
(rewrite (H0 W) (XOR (K1_5 W) (K2_5 W)) )
(rewrite (H5 W O) (MUL2 (H0 W) (Q O)) )
(rewrite (H7 W) (XOR (K1_7 W) (K2_7 W)) )
(rewrite (H9 W) (XOR (K1_9 W) (K2_9 W)) )
(rewrite (splitSegment (unitMessage W)) (unitSegment (unitMessage W)) )
(rewrite (splitSegment (consMessage W M)) (cutSegment M (unitMessage W) n254) )
(rewrite (cutSegment (unitMessage W) Mtick N) (unitSegment (reverseMessage (consMessage W Mtick))) )
(rewrite (cutSegment (consMessage W M) Mtick n0) (consSegment (reverseMessage (consMessage W Mtick)) (splitSegment M)) )
(rewrite (cutSegment (consMessage W M) Mtick (succNat N)) (cutSegment M (consMessage W Mtick) N) )
(rewrite (preludeXY W1 W2) (preludeXYtick (BYT W1 W2) (PAT W1 W2)) )
(rewrite (preludeVW W1 W2) (preludeVWtick (BYT W1 W2)) )
(rewrite (preludeST W1 W2) (preludeSTtick (BYT W1 W2)) )
(rewrite (preludeXYtick (buildPair W Wtick) O) (BYT (H4 W) (H5 Wtick O)) )
(rewrite (preludeVWtick (buildPair W Wtick)) (BYT (H6 W) (H7 Wtick)) )
(rewrite (preludeSTtick (buildPair W Wtick)) (BYT (H8 W) (H9 Wtick)) )
(rewrite (computeXY P Ptick W) (computeXYtick P W (XORtick (computeVW Ptick))) )
(rewrite (computeXYtick (buildPair W1 W2) W Wtick) (buildPair (MUL1 (XOR W1 W) (FIX1 (ADD (XOR W2 W) Wtick))) (MUL2A (XOR W2 W) (FIX2 (ADD (XOR W1 W) Wtick)))) )
(rewrite (computeVW (buildPair W1 W2)) (buildPair (CYC W1) W2) )
(rewrite (loop1 P Ptick (unitMessage W)) (computeXY P Ptick W) )
(rewrite (loop1 P Ptick (consMessage W M)) (loop1 (computeXY P Ptick W) (computeVW Ptick) M) )
(rewrite (loop2 P Ptick (unitMessage W)) (computeVW Ptick) )
(rewrite (loop2 P Ptick (consMessage W M)) (loop2 (computeXY P Ptick W) (computeVW Ptick) M) )
(rewrite (coda P Ptick (buildPair W Wtick)) (XORtick (computeXY (computeXY P Ptick W) (computeVW Ptick) Wtick)) )
(rewrite (MAA (buildKey W1 W2) M) (MAAtick (preludeXY W1 W2) (preludeVW W1 W2) (preludeST W1 W2) M) )
(rewrite (MAAtick P1 P2 P3 M) (coda (loop1 P1 P2 M) (loop2 P1 P2 M) P3) )
(rewrite (MAC K M) (MACfirst K (splitSegment M)) )
(rewrite (MACfirst K (unitSegment M)) (MAA K M) )
(rewrite (MACfirst K (consSegment M S)) (MACnext K (MAA K M) S) )
(rewrite (MACnext K W (unitSegment M)) (MAA K (consMessage W M)) )
(rewrite (MACnext K W (consSegment M S)) (MACnext K (MAA K (consMessage W M)) S) )
(push)
(define test (eqBlock (MUL1 x0000000F x0000000E) x000000D2))
(run 10000)
(pop)

(push)
(define test (eqBlock (MUL1 xFFFFFFF0 x0000000E) xFFFFFF2D))
(run 10000)
(pop)

(push)
(define test (eqBlock (MUL1 xFFFFFFF0 xFFFFFFF1) x000000D2))
(run 10000)
(pop)

(push)
(define test (eqBlock (MUL2 x0000000F x0000000E) x000000D2))
(run 10000)
(pop)

(push)
(define test (eqBlock (MUL2 xFFFFFFF0 x0000000E) xFFFFFF3A))
(run 10000)
(pop)

(push)
(define test (eqBlock (MUL2 xFFFFFFF0 xFFFFFFF1) x000000B6))
(run 10000)
(pop)

(push)
(define test (eqBlock (MUL2A x0000000F x0000000E) x000000D2))
(run 10000)
(pop)

(push)
(define test (eqBlock (MUL2A xFFFFFFF0 x0000000E) xFFFFFF3A))
(run 10000)
(pop)

(push)
(define test (eqBlock (MUL2A x7FFFFFF0 xFFFFFFF1) x800000C2))
(run 10000)
(pop)

(push)
(define test (eqBlock (MUL2A xFFFFFFF0 x7FFFFFF1) x000000C4))
(run 10000)
(pop)

(push)
(define test (eqPair (BYT x00000000 x00000000) (buildPair x0103070F x1F3F7FFF)))
(run 10000)
(pop)

(push)
(define test (eqPair (BYT xFFFF00FF xFFFFFFFF) (buildPair xFEFC07F0 xE0C08000)))
(run 10000)
(pop)

(push)
(define test (eqPair (BYT xAB00FFCD xFFEF0001) (buildPair xAB01FCCD xF2EF3501)))
(run 10000)
(pop)

(push)
(define test (eqOctet (PAT x00000000 x00000000) xFF))
(run 10000)
(pop)

(push)
(define test (eqOctet (PAT xFFFF00FF xFFFFFFFF) xFF))
(run 10000)
(pop)

(push)
(define test (eqOctet (PAT xAB00FFCD xFFEF0001) x6A))
(run 10000)
(pop)

(push)
(define test (eqBlock (J1_2 x00000100) x00010000))
(run 10000)
(pop)

(push)
(define test (eqBlock (J1_4 x00000100) x00000001))
(run 10000)
(pop)

(push)
(define test (eqBlock (J1_6 x00000100) x00010000))
(run 10000)
(pop)

(push)
(define test (eqBlock (J1_8 x00000100) x00000001))
(run 10000)
(pop)

(push)
(define test (eqBlock (J2_2 x00000100) x00010000))
(run 10000)
(pop)

(push)
(define test (eqBlock (J2_4 x00000100) x00000002))
(run 10000)
(pop)

(push)
(define test (eqBlock (J2_6 x00000100) x00020000))
(run 10000)
(pop)

(push)
(define test (eqBlock (J2_8 x00000100) x00000004))
(run 10000)
(pop)

(push)
(define test (eqBlock (H4 x00000100) x00000003))
(run 10000)
(pop)

(push)
(define test (eqBlock (H6 x00000100) x00030000))
(run 10000)
(pop)

(push)
(define test (eqBlock (H8 x00000100) x00000005))
(run 10000)
(pop)

(push)
(define test (eqBlock (K1_2 x00000080) x00004000))
(run 10000)
(pop)

(push)
(define test (eqBlock (K1_4 x00000080) x10000000))
(run 10000)
(pop)

(push)
(define test (eqBlock (K1_5 x00000080) x00000008))
(run 10000)
(pop)

(push)
(define test (eqBlock (K1_7 x00000080) x00020000))
(run 10000)
(pop)

(push)
(define test (eqBlock (K1_9 x00000080) x80000000))
(run 10000)
(pop)

(push)
(define test (eqBlock (K2_2 x00000080) x00004000))
(run 10000)
(pop)

(push)
(define test (eqBlock (K2_4 x00000080) x10000000))
(run 10000)
(pop)

(push)
(define test (eqBlock (K2_5 x00000080) x00000010))
(run 10000)
(pop)

(push)
(define test (eqBlock (K2_7 x00000080) x00040000))
(run 10000)
(pop)

(push)
(define test (eqBlock (K2_9 x00000080) x00000002))
(run 10000)
(pop)

(push)
(define test (eqBlock (H0 x00000080) x00000018))
(run 10000)
(pop)

(push)
(define test (eqBlock (Q x01) x00000004))
(run 10000)
(pop)

(push)
(define test (eqBlock (H5 x00000080 x01) x00000060))
(run 10000)
(pop)

(push)
(define test (eqBlock (H7 x00000080) x00060000))
(run 10000)
(pop)

(push)
(define test (eqBlock (H9 x00000080) x80000002))
(run 10000)
(pop)

(push)
(define test (eqOctet (PAT x00000003 x00000060) xEE))
(run 10000)
(pop)

(push)
(define test (eqOctet (PAT x00030000 x00060000) xBB))
(run 10000)
(pop)

(push)
(define test (eqOctet (PAT x00000005 x80000002) xE6))
(run 10000)
(pop)

(push)
(define test (eqPair (BYT x00000003 x00000060) (buildPair x01030703 x1D3B7760)))
(run 10000)
(pop)

(push)
(define test (eqPair (BYT x00030000 x00060000) (buildPair x0103050B x17065DBB)))
(run 10000)
(pop)

(push)
(define test (eqPair (BYT x00000005 x80000002) (buildPair x01030705 x80397302)))
(run 10000)
(pop)

(push)
(define test (eqBlock (CYC x00000003) x00000006))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR x00000006 x00000003) x00000005))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR x00000002 x00000005) x00000007))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR x00000003 x00000005) x00000006))
(run 10000)
(pop)

(push)
(define test (eqBlock (ADD x00000005 x00000006) x0000000B))
(run 10000)
(pop)

(push)
(define test (eqBlock (ADD x00000005 x00000007) x0000000C))
(run 10000)
(pop)

(push)
(define test (eqBlock (OR x0000000B x00000004) x0000000F))
(run 10000)
(pop)

(push)
(define test (eqBlock (OR x0000000C x00000001) x0000000D))
(run 10000)
(pop)

(push)
(define test (eqBlock (AND x0000000F xFFFFFFF7) x00000007))
(run 10000)
(pop)

(push)
(define test (eqBlock (AND x0000000D xFFFFFFFB) x00000009))
(run 10000)
(pop)

(push)
(define test (eqBlock (MUL1 x00000007 x00000007) x00000031))
(run 10000)
(pop)

(push)
(define test (eqBlock (MUL2A x00000006 x00000009) x00000036))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR x00000031 x00000036) x00000007))
(run 10000)
(pop)

(push)
(define test (eqBlock (CYC x00000003) x00000006))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR x00000006 x00000003) x00000005))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR xFFFFFFFD x00000001) xFFFFFFFC))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR xFFFFFFFC x00000001) xFFFFFFFD))
(run 10000)
(pop)

(push)
(define test (eqBlock (ADD x00000005 xFFFFFFFD) x00000002))
(run 10000)
(pop)

(push)
(define test (eqBlock (ADD x00000005 xFFFFFFFC) x00000001))
(run 10000)
(pop)

(push)
(define test (eqBlock (OR x00000002 x00000001) x00000003))
(run 10000)
(pop)

(push)
(define test (eqBlock (OR x00000001 x00000004) x00000005))
(run 10000)
(pop)

(push)
(define test (eqBlock (AND x00000003 xFFFFFFF9) x00000001))
(run 10000)
(pop)

(push)
(define test (eqBlock (AND x00000005 xFFFFFFFC) x00000004))
(run 10000)
(pop)

(push)
(define test (eqBlock (MUL1 xFFFFFFFC x00000001) xFFFFFFFC))
(run 10000)
(pop)

(push)
(define test (eqBlock (MUL2A xFFFFFFFD x00000004) xFFFFFFFA))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR xFFFFFFFC xFFFFFFFA) x00000006))
(run 10000)
(pop)

(push)
(define test (eqBlock (CYC x00000007) x0000000E))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR x0000000E x00000007) x00000009))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR xFFFFFFFD x00000008) xFFFFFFF5))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR xFFFFFFFC x00000008) xFFFFFFF4))
(run 10000)
(pop)

(push)
(define test (eqBlock (ADD x00000009 xFFFFFFF4) xFFFFFFFD))
(run 10000)
(pop)

(push)
(define test (eqBlock (ADD x00000009 xFFFFFFF5) xFFFFFFFE))
(run 10000)
(pop)

(push)
(define test (eqBlock (OR xFFFFFFFD x00000001) xFFFFFFFD))
(run 10000)
(pop)

(push)
(define test (eqBlock (OR xFFFFFFFE x00000002) xFFFFFFFE))
(run 10000)
(pop)

(push)
(define test (eqBlock (AND xFFFFFFFD xFFFFFFFE) xFFFFFFFC))
(run 10000)
(pop)

(push)
(define test (eqBlock (AND xFFFFFFFE x7FFFFFFD) x7FFFFFFC))
(run 10000)
(pop)

(push)
(define test (eqBlock (MUL1 xFFFFFFF5 xFFFFFFFC) x0000001E))
(run 10000)
(pop)

(push)
(define test (eqBlock (MUL2A xFFFFFFF4 x7FFFFFFC) x0000001E))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR x0000001E x0000001E) x00000000))
(run 10000)
(pop)

(push)
(define test (eqBlock (CYC x00000001) x00000002))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR x00000002 x00000001) x00000003))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR x00000001 x00000000) x00000001))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR x00000002 x00000000) x00000002))
(run 10000)
(pop)

(push)
(define test (eqBlock (ADD x00000003 x00000002) x00000005))
(run 10000)
(pop)

(push)
(define test (eqBlock (ADD x00000003 x00000001) x00000004))
(run 10000)
(pop)

(push)
(define test (eqBlock (OR x00000005 x00000002) x00000007))
(run 10000)
(pop)

(push)
(define test (eqBlock (OR x00000004 x00000001) x00000005))
(run 10000)
(pop)

(push)
(define test (eqBlock (AND x00000007 xFFFFFFFB) x00000003))
(run 10000)
(pop)

(push)
(define test (eqBlock (AND x00000005 xFFFFFFFB) x00000001))
(run 10000)
(pop)

(push)
(define test (eqBlock (MUL1 x00000001 x00000003) x00000003))
(run 10000)
(pop)

(push)
(define test (eqBlock (MUL2A x00000002 x00000001) x00000002))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR x00000003 x00000002) x00000001))
(run 10000)
(pop)

(push)
(define test (eqBlock (CYC x00000002) x00000004))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR x00000004 x00000001) x00000005))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR x00000003 x00000001) x00000002))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR x00000002 x00000001) x00000003))
(run 10000)
(pop)

(push)
(define test (eqBlock (ADD x00000005 x00000003) x00000008))
(run 10000)
(pop)

(push)
(define test (eqBlock (ADD x00000005 x00000002) x00000007))
(run 10000)
(pop)

(push)
(define test (eqBlock (OR x00000008 x00000002) x0000000A))
(run 10000)
(pop)

(push)
(define test (eqBlock (OR x00000007 x00000001) x00000007))
(run 10000)
(pop)

(push)
(define test (eqBlock (AND x0000000A xFFFFFFFB) x0000000A))
(run 10000)
(pop)

(push)
(define test (eqBlock (AND x00000007 xFFFFFFFB) x00000003))
(run 10000)
(pop)

(push)
(define test (eqBlock (MUL1 x00000002 x0000000A) x00000014))
(run 10000)
(pop)

(push)
(define test (eqBlock (MUL2A x00000003 x00000003) x00000009))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR x00000014 x00000009) x0000001D))
(run 10000)
(pop)

(push)
(define test (eqBlock (CYC x00000004) x00000008))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR x00000008 x00000001) x00000009))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR x00000014 x00000002) x00000016))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR x00000009 x00000002) x0000000B))
(run 10000)
(pop)

(push)
(define test (eqBlock (ADD x00000009 x0000000B) x00000014))
(run 10000)
(pop)

(push)
(define test (eqBlock (ADD x00000009 x00000016) x0000001F))
(run 10000)
(pop)

(push)
(define test (eqBlock (OR x00000014 x00000002) x00000016))
(run 10000)
(pop)

(push)
(define test (eqBlock (OR x0000001F x00000001) x0000001F))
(run 10000)
(pop)

(push)
(define test (eqBlock (AND x00000016 xFFFFFFFB) x00000012))
(run 10000)
(pop)

(push)
(define test (eqBlock (AND x0000001F xFFFFFFFB) x0000001B))
(run 10000)
(pop)

(push)
(define test (eqBlock (MUL1 x00000016 x00000012) x0000018C))
(run 10000)
(pop)

(push)
(define test (eqBlock (MUL2A x0000000B x0000001B) x00000129))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR x0000018C x00000129) x000000A5))
(run 10000)
(pop)

(push)
(define test (eqBlock (CYC xC4EB1AEB) x89D635D7))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR x89D635D7 xF6A09667) x7F76A3B0))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR x21D869BA x0A202020) x2BF8499A))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR x7792F9D4 x0A202020) x7DB2D9F4))
(run 10000)
(pop)

(push)
(define test (eqBlock (ADD x7F76A3B0 x7DB2D9F4) xFD297DA4))
(run 10000)
(pop)

(push)
(define test (eqBlock (ADD x7F76A3B0 x2BF8499A) xAB6EED4A))
(run 10000)
(pop)

(push)
(define test (eqBlock (OR xFD297DA4 x02040801) xFF2D7DA5))
(run 10000)
(pop)

(push)
(define test (eqBlock (OR xAB6EED4A x00804021) xABEEED6B))
(run 10000)
(pop)

(push)
(define test (eqBlock (AND xFF2D7DA5 xBFEF7FDF) xBF2D7D85))
(run 10000)
(pop)

(push)
(define test (eqBlock (AND xABEEED6B x7DFEFBFF) x29EEE96B))
(run 10000)
(pop)

(push)
(define test (eqBlock (MUL1 x2BF8499A xBF2D7D85) x0AD67E20))
(run 10000)
(pop)

(push)
(define test (eqBlock (MUL2A x7DB2D9F4 x29EEE96B) x30261492))
(run 10000)
(pop)

(push)
(define test (eqOctet (PAT x00FF00FF x00000000) xFF))
(run 10000)
(pop)

(push)
(define test (eqPair (preludeXY x00FF00FF x00000000) (buildPair x4A645A01 x50DEC930)))
(run 10000)
(pop)

(push)
(define test (eqPair (preludeVW x00FF00FF x00000000) (buildPair x5CCA3239 xFECCAA6E)))
(run 10000)
(pop)

(push)
(define test (eqPair (preludeST x00FF00FF x00000000) (buildPair x51EDE9C7 x24B66FB5)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x4A645A01 x50DEC930) x55555555 (XOR (nCYC n1 x5CCA3239) xFECCAA6E)) (buildPair x48B204D6 x5834A585)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x48B204D6 x5834A585) xAAAAAAAA (XOR (nCYC n2 x5CCA3239) xFECCAA6E)) (buildPair x4F998E01 xBE9F0917)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x4F998E01 xBE9F0917) x51EDE9C7 (XOR (nCYC n3 x5CCA3239) xFECCAA6E)) (buildPair x344925FC xDB9102B0)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x344925FC xDB9102B0) x24B66FB5 (XOR (nCYC n4 x5CCA3239) xFECCAA6E)) (buildPair x277B4B25 xD636250D)))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR x277B4B25 xD636250D) xF14D6E28))
(run 10000)
(pop)

(push)
(define test (eqOctet (PAT x00FF00FF x00000000) xFF))
(run 10000)
(pop)

(push)
(define test (eqPair (preludeXY x00FF00FF x00000000) (buildPair x4A645A01 x50DEC930)))
(run 10000)
(pop)

(push)
(define test (eqPair (preludeVW x00FF00FF x00000000) (buildPair x5CCA3239 xFECCAA6E)))
(run 10000)
(pop)

(push)
(define test (eqPair (preludeST x00FF00FF x00000000) (buildPair x51EDE9C7 x24B66FB5)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x4A645A01 x50DEC930) xAAAAAAAA (XOR (nCYC n1 x5CCA3239) xFECCAA6E)) (buildPair x6AEBACF8 x9DB15CF6)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x6AEBACF8 x9DB15CF6) x55555555 (XOR (nCYC n2 x5CCA3239) xFECCAA6E)) (buildPair x270EEDAF xB8142629)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x270EEDAF xB8142629) x51EDE9C7 (XOR (nCYC n3 x5CCA3239) xFECCAA6E)) (buildPair x29907CD8 xBA92DB12)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x29907CD8 xBA92DB12) x24B66FB5 (XOR (nCYC n4 x5CCA3239) xFECCAA6E)) (buildPair x28EAD8B3 x81D10CA3)))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR x28EAD8B3 x81D10CA3) xA93BD410))
(run 10000)
(pop)

(push)
(define test (eqOctet (PAT x55555555 x5A35D667) x00))
(run 10000)
(pop)

(push)
(define test (eqPair (preludeXY x55555555 x5A35D667) (buildPair x34ACF886 x7397C9AE)))
(run 10000)
(pop)

(push)
(define test (eqPair (preludeVW x55555555 x5A35D667) (buildPair x7201F4DC x2829040B)))
(run 10000)
(pop)

(push)
(define test (eqPair (preludeST x55555555 x5A35D667) (buildPair x9E2E7B36 x13647149)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x34ACF886 x7397C9AE) x00000000 (XOR (nCYC n1 x7201F4DC) x2829040B)) (buildPair x2FD76FFB x550D91CE)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x2FD76FFB x550D91CE) xFFFFFFFF (XOR (nCYC n2 x7201F4DC) x2829040B)) (buildPair xA70FC148 x1D10D8D3)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair xA70FC148 x1D10D8D3) x9E2E7B36 (XOR (nCYC n3 x7201F4DC) x2829040B)) (buildPair xB1CC1CC5 x29C1485F)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair xB1CC1CC5 x29C1485F) x13647149 (XOR (nCYC n4 x7201F4DC) x2829040B)) (buildPair x288FC786 x9115A558)))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR x288FC786 x9115A558) xB99A62DE))
(run 10000)
(pop)

(push)
(define test (eqOctet (PAT x55555555 x5A35D667) x00))
(run 10000)
(pop)

(push)
(define test (eqPair (preludeXY x55555555 x5A35D667) (buildPair x34ACF886 x7397C9AE)))
(run 10000)
(pop)

(push)
(define test (eqPair (preludeVW x55555555 x5A35D667) (buildPair x7201F4DC x2829040B)))
(run 10000)
(pop)

(push)
(define test (eqPair (preludeST x55555555 x5A35D667) (buildPair x9E2E7B36 x13647149)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x34ACF886 x7397C9AE) xFFFFFFFF (XOR (nCYC n1 x7201F4DC) x2829040B)) (buildPair x8DC8BBDE xFE4E5BDD)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x8DC8BBDE xFE4E5BDD) x00000000 (XOR (nCYC n2 x7201F4DC) x2829040B)) (buildPair xCBC865BA x0297AF6F)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair xCBC865BA x0297AF6F) x9E2E7B36 (XOR (nCYC n3 x7201F4DC) x2829040B)) (buildPair x3CF3A7D2 x160EE9B5)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x3CF3A7D2 x160EE9B5) x13647149 (XOR (nCYC n4 x7201F4DC) x2829040B)) (buildPair xD0482465 x7050EC5E)))
(run 10000)
(pop)

(push)
(define test (eqBlock (XOR xD0482465 x7050EC5E) xA018C83B))
(run 10000)
(pop)

(push)
(define test (eqPair (preludeXY xE6A12F07 x9D15C437) (buildPair x21D869BA x7792F9D4)))
(run 10000)
(pop)

(push)
(define test (eqPair (preludeVW xE6A12F07 x9D15C437) (buildPair xC4EB1AEB xF6A09667)))
(run 10000)
(pop)

(push)
(define test (eqPair (preludeST xE6A12F07 x9D15C437) (buildPair x6D67E884 xA511987A)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x204E80A7 x077788A2) x00000000 (XOR (nCYC n1 x17A808FD) xFEA1D334)) (buildPair x303FF4AA x1277A6D4)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x303FF4AA x1277A6D4) x00000000 (XOR (nCYC n2 x17A808FD) xFEA1D334)) (buildPair x55DD063F x4C49AAE0)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x55DD063F x4C49AAE0) x00000000 (XOR (nCYC n3 x17A808FD) xFEA1D334)) (buildPair x51AF3C1D x5BC02502)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x51AF3C1D x5BC02502) x00000000 (XOR (nCYC n4 x17A808FD) xFEA1D334)) (buildPair xA44AAAC0 x63C70DBA)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair xA44AAAC0 x63C70DBA) x00000000 (XOR (nCYC n5 x17A808FD) xFEA1D334)) (buildPair x4D53901A x2E80AC30)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x4D53901A x2E80AC30) x00000000 (XOR (nCYC n6 x17A808FD) xFEA1D334)) (buildPair x5F38EEF1 x2A6091AE)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x5F38EEF1 x2A6091AE) x00000000 (XOR (nCYC n7 x17A808FD) xFEA1D334)) (buildPair xF0239DD5 x3DD81AC6)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair xF0239DD5 x3DD81AC6) x00000000 (XOR (nCYC n8 x17A808FD) xFEA1D334)) (buildPair xEB35B97F x9372CDC6)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair xEB35B97F x9372CDC6) x00000000 (XOR (nCYC n9 x17A808FD) xFEA1D334)) (buildPair x4DA124A1 xC6B1317E)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x4DA124A1 xC6B1317E) x00000000 (XOR (nCYC n10 x17A808FD) xFEA1D334)) (buildPair x7F839576 x74B39176)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x7F839576 x74B39176) x00000000 (XOR (nCYC n11 x17A808FD) xFEA1D334)) (buildPair x11A9D254 xD78634BC)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x11A9D254 xD78634BC) x00000000 (XOR (nCYC n12 x17A808FD) xFEA1D334)) (buildPair xD8804CA5 xFDC1A8BA)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair xD8804CA5 xFDC1A8BA) x00000000 (XOR (nCYC n13 x17A808FD) xFEA1D334)) (buildPair x3F6F7248 x11AC46B8)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x3F6F7248 x11AC46B8) x00000000 (XOR (nCYC n14 x17A808FD) xFEA1D334)) (buildPair xACBC13DD x33D5A466)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair xACBC13DD x33D5A466) x00000000 (XOR (nCYC n15 x17A808FD) xFEA1D334)) (buildPair x4CE933E1 xC21A1846)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x4CE933E1 xC21A1846) x00000000 (XOR (nCYC n16 x17A808FD) xFEA1D334)) (buildPair xC1ED90DD xCD959B46)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair xC1ED90DD xCD959B46) x00000000 (XOR (nCYC n17 x17A808FD) xFEA1D334)) (buildPair x3CD54DEB x613F8E2A)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x3CD54DEB x613F8E2A) x00000000 (XOR (nCYC n18 x17A808FD) xFEA1D334)) (buildPair xBBA57835 x07C72EAA)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair xBBA57835 x07C72EAA) x00000000 (XOR (nCYC n19 x17A808FD) xFEA1D334)) (buildPair xD7843FDC x6AD6E8A4)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair xD7843FDC x6AD6E8A4) x00000000 (XOR (nCYC n20 x17A808FD) xFEA1D334)) (buildPair x5EBA06C2 x91896CFA)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x5EBA06C2 x91896CFA) x76232E5F (XOR (nCYC n21 x17A808FD) xFEA1D334)) (buildPair x1D9C9655 x98D1CC75)))
(run 10000)
(pop)

(push)
(define test (eqPair (computeXYtick (buildPair x1D9C9655 x98D1CC75) x4FB1138A (XOR (nCYC n22 x17A808FD) xFEA1D334)) (buildPair x7BC180AB xA0B87B77)))
(run 10000)
(pop)

(push)
(define test (eqBlock (MAC (buildKey x80018001 x80018000) (makeMessage n20 x00000000 x00000000)) xDB79FBDC))
(run 10000)
(pop)

(push)
(define test (eqBlock (MAC (buildKey x80018001 x80018000) (makeMessage n16 x00000000 x07050301)) x8CE37709))
(run 10000)
(pop)

(push)
(define test (eqBlock (MAC (buildKey x80018001 x80018000) (makeMessage n256 x00000000 x07050301)) x717153D5))
(run 10000)
(pop)

(push)
(define test (eqBlock (MAC (buildKey x80018001 x80018000) (makeMessage n4100 x00000000 x07050301)) x7783C51D))
(run 10000)
(pop)
