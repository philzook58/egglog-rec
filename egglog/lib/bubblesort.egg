
(datatype Bool)
(datatype Nat)
(datatype NatList)
(function mytrue () Bool)
(function myfalse () Bool)
(function d0 () Nat)
(function s (Nat) Nat)
(function nil () NatList)
(function cons (Nat NatList) NatList)
(function d10 () Nat)
(function lt (Nat Nat) Bool)
(function bubsORt (Nat NatList) NatList)
(function plus (Nat Nat) Nat)
(function times (Nat Nat) Nat)
(function rev (Nat) NatList)
(function fact (Nat) Nat)
(rewrite d10 (s (s (s (s (s (s (s (s (s (s d0)))))))))) )
(rewrite (lt d0 d0) myfalse )
(rewrite (lt d0 (s N)) mytrue )
(rewrite (lt (s N) d0) myfalse )
(rewrite (lt (s N) (s M)) (lt N M) )
(rewrite (plus d0 N) N )
(rewrite (plus (s N) M) (s (plus N M)) )
(rewrite (times d0 N) d0 )
(rewrite (times (s N) M) (plus M (times N M)) )
(rewrite (fact d0) (s d0) )
(rewrite (fact (s N)) (times (s N) (fact N)) )
(rewrite (rev (s N)) (bubsORt (s N) (rev N)) )
(rewrite (rev d0) (cons d0 nil) )
(rewrite (bubsORt N nil) (cons N nil) )
(rewrite (bubsORt N (cons M L)) (cons M (bubsORt N L)) :when ((= (lt M N) mytrue)))
(rewrite (bubsORt N (cons M L)) (cons N (bubsORt M L)) :when ((= (lt M N) myfalse)))